/**
 * –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏–π –æ—Ç—á–µ—Ç–æ–≤
 * –ó–∞–¥–∞—á–∏ 10-11: –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–æ–≤
 */

// –ò–º–ø–æ—Ä—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π (–µ—Å–ª–∏ –≤ Node.js —Å—Ä–µ–¥–µ)
let forecastFiltersTests, forecastTableTests, portfolioTests;

if (typeof require !== 'undefined') {
  try {
    forecastFiltersTests = require('./forecast-report-filters.test.js');
    forecastTableTests = require('./forecast-table-view.test.js');
    portfolioTests = require('./portfolio-report-enhancements.test.js');
  } catch (error) {
    console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø—É—Å–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π —Å—Ä–µ–¥–µ.');
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
async function runAllReportsTests() {
  console.log('üöÄ –ó–ê–ü–£–°–ö –ö–û–ú–ü–õ–ï–ö–°–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –£–õ–£–ß–®–ï–ù–ò–ô –û–¢–ß–ï–¢–û–í');
  console.log('=' .repeat(60));
  console.log('');
  
  const results = {
    forecastFilters: null,
    forecastTable: null,
    portfolio: null,
    totalPassed: 0,
    totalFailed: 0,
    totalTests: 0
  };
  
  // 1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø—Ä–æ–≥–Ω–æ–∑–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
  console.log('üìä –ë–õ–û–ö 1: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–ò–õ–¨–¢–†–û–í –ü–†–û–ì–ù–û–ó–ù–û–ì–û –û–¢–ß–ï–¢–ê');
  console.log('-'.repeat(50));
  
  if (forecastFiltersTests && forecastFiltersTests.runForecastFilterTests) {
    try {
      results.forecastFilters = await forecastFiltersTests.runForecastFilterTests();
      console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø—Ä–æ–≥–Ω–æ–∑–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤:', error.message);
      results.forecastFilters = { error: error.message };
    }
  } else {
    console.log('‚ÑπÔ∏è  –¢–µ—Å—Ç—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø—Ä–æ–≥–Ω–æ–∑–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π —Å—Ä–µ–¥–µ');
    console.log('   –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: node tests/forecast-report-filters.test.js');
  }
  
  console.log('');
  
  // 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—á–Ω–æ–≥–æ –≤–∏–¥–∞ –ø—Ä–æ–≥–Ω–æ–∑–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
  console.log('üìã –ë–õ–û–ö 2: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –¢–ê–ë–õ–ò–ß–ù–û–ì–û –í–ò–î–ê –ü–†–û–ì–ù–û–ó–ù–û–ì–û –û–¢–ß–ï–¢–ê');
  console.log('-'.repeat(50));
  
  if (forecastTableTests && forecastTableTests.runTableViewTests) {
    try {
      results.forecastTable = forecastTableTests.runTableViewTests();
      console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—á–Ω–æ–≥–æ –≤–∏–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—á–Ω–æ–≥–æ –≤–∏–¥–∞:', error.message);
      results.forecastTable = { error: error.message };
    }
  } else {
    console.log('‚ÑπÔ∏è  –¢–µ—Å—Ç—ã —Ç–∞–±–ª–∏—á–Ω–æ–≥–æ –≤–∏–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π —Å—Ä–µ–¥–µ');
    console.log('   –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: node tests/forecast-table-view.test.js');
  }
  
  console.log('');
  
  // 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
  console.log('üíº –ë–õ–û–ö 3: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–õ–£–ß–®–ï–ù–ò–ô –ü–û–†–¢–§–ï–õ–¨–ù–û–ì–û –û–¢–ß–ï–¢–ê');
  console.log('-'.repeat(50));
  
  if (portfolioTests && portfolioTests.runPortfolioEnhancementTests) {
    try {
      results.portfolio = portfolioTests.runPortfolioEnhancementTests();
      console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞:', error.message);
      results.portfolio = { error: error.message };
    }
  } else {
    console.log('‚ÑπÔ∏è  –¢–µ—Å—Ç—ã –ø–æ—Ä—Ç—Ñ–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π —Å—Ä–µ–¥–µ');
    console.log('   –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: node tests/portfolio-report-enhancements.test.js');
  }
  
  console.log('');
  
  // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  if (results.forecastTable && !results.forecastTable.error) {
    results.totalPassed += results.forecastTable.totalPassed || 0;
    results.totalFailed += results.forecastTable.totalFailed || 0;
  }
  
  if (results.portfolio && !results.portfolio.error) {
    results.totalPassed += results.portfolio.totalPassed || 0;
    results.totalFailed += results.portfolio.totalFailed || 0;
  }
  
  results.totalTests = results.totalPassed + results.totalFailed;
  
  // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  console.log('üéØ –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ');
  console.log('=' .repeat(60));
  console.log('');
  
  console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –±–ª–æ–∫–∞–º:');
  
  if (results.forecastFilters && !results.forecastFilters.error) {
    console.log('   üìà –§–∏–ª—å—Ç—Ä—ã –ø—Ä–æ–≥–Ω–æ–∑–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: API —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã');
  } else if (results.forecastFilters && results.forecastFilters.error) {
    console.log('   ‚ùå –§–∏–ª—å—Ç—Ä—ã –ø—Ä–æ–≥–Ω–æ–∑–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
  } else {
    console.log('   ‚è≠Ô∏è  –§–∏–ª—å—Ç—Ä—ã –ø—Ä–æ–≥–Ω–æ–∑–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: –ü—Ä–æ–ø—É—â–µ–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç API)');
  }
  
  if (results.forecastTable && !results.forecastTable.error) {
    console.log(`   üìã –¢–∞–±–ª–∏—á–Ω—ã–π –≤–∏–¥: ${results.forecastTable.totalPassed}/${results.forecastTable.totalPassed + results.forecastTable.totalFailed} (${results.forecastTable.successRate}%)`);
  } else if (results.forecastTable && results.forecastTable.error) {
    console.log('   ‚ùå –¢–∞–±–ª–∏—á–Ω—ã–π –≤–∏–¥: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
  } else {
    console.log('   ‚è≠Ô∏è  –¢–∞–±–ª–∏—á–Ω—ã–π –≤–∏–¥: –ü—Ä–æ–ø—É—â–µ–Ω–æ');
  }
  
  if (results.portfolio && !results.portfolio.error) {
    console.log(`   üíº –ü–æ—Ä—Ç—Ñ–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç: ${results.portfolio.totalPassed}/${results.portfolio.totalPassed + results.portfolio.totalFailed} (${results.portfolio.successRate}%)`);
  } else if (results.portfolio && results.portfolio.error) {
    console.log('   ‚ùå –ü–æ—Ä—Ç—Ñ–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
  } else {
    console.log('   ‚è≠Ô∏è  –ü–æ—Ä—Ç—Ñ–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç: –ü—Ä–æ–ø—É—â–µ–Ω–æ');
  }
  
  console.log('');
  console.log('üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
  console.log(`   ‚úÖ –í—Å–µ–≥–æ –ø—Ä–æ–π–¥–µ–Ω–æ: ${results.totalPassed}`);
  console.log(`   ‚ùå –í—Å–µ–≥–æ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ: ${results.totalFailed}`);
  console.log(`   üìä –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${results.totalTests}`);
  
  if (results.totalTests > 0) {
    const successRate = Math.round((results.totalPassed / results.totalTests) * 100);
    console.log(`   üéØ –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${successRate}%`);
    
    if (successRate >= 90) {
      console.log('   üèÜ –û–¢–õ–ò–ß–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢! –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    } else if (successRate >= 75) {
      console.log('   üëç –•–û–†–û–®–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    } else if (successRate >= 50) {
      console.log('   ‚ö†Ô∏è  –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.');
    } else {
      console.log('   üö® –ù–ï–£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢. –¢—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä—å–µ–∑–Ω–∞—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞.');
    }
  } else {
    console.log('   ‚ÑπÔ∏è  –¢–µ—Å—Ç—ã –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π —Å—Ä–µ–¥–µ');
  }
  
  console.log('');
  console.log('üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
  console.log('   1. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
  console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±—Ä–∞—É–∑–µ—Ä–Ω—É—é –∫–æ–Ω—Å–æ–ª—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ JavaScript');
  console.log('   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏');
  console.log('   4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤—Ä—É—á–Ω—É—é –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
  
  return results;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
function generateTestReport(results) {
  const timestamp = new Date().toISOString();
  
  const report = {
    timestamp,
    summary: {
      totalPassed: results.totalPassed,
      totalFailed: results.totalFailed,
      totalTests: results.totalTests,
      successRate: results.totalTests > 0 ? Math.round((results.totalPassed / results.totalTests) * 100) : 0
    },
    details: {
      forecastFilters: results.forecastFilters,
      forecastTable: results.forecastTable,
      portfolio: results.portfolio
    },
    recommendations: [
      '–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤',
      '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±—Ä–∞—É–∑–µ—Ä–Ω—É—é –∫–æ–Ω—Å–æ–ª—å –Ω–∞ JavaScript –æ—à–∏–±–∫–∏',
      '–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤—Ä—É—á–Ω—É—é',
      '–£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π'
    ]
  };
  
  return report;
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    runAllReportsTests,
    generateTestReport
  };
}

// –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏
if (typeof window !== 'undefined') {
  console.log('üß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ç–µ—Å—Ç—ã –æ—Ç—á–µ—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.');
  console.log('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ runAllReportsTests() –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤.');
  console.log('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ generateTestReport(results) –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞.');
} else if (require.main === module) {
  runAllReportsTests().then(results => {
    const report = generateTestReport(results);
    console.log('\nüìÑ –û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π report');
  }).catch(console.error);
}